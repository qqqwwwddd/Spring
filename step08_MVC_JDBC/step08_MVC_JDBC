step08_MVC_JDBC

[학습]
1. Mybatis
    - JDBC를 통해 DB에 접근하는 작업을 캡슐화
    - 일반 SQL 쿼리, 프로시저 등의 고급 매핑을 지원하는 프레임 워크
    - 프로그램 소스코드와 SQL 쿼리가 분리 - 유지보수 향상
    - 코드 간결성 향상
    
2. REST Representational State Transfer
	- 웹에서 데이터를 전송하고 처리하는 방법을 정의한 인터페이스
	- HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시
	- HTTP Method를 통해 해당 자원에 대한 CRUD Operation을 적용
	- Resource 중심의 설계 아키텍쳐
	
	- 메소드
		- POST : 데이터 생성 (INSERT) 
		- GET : 데이터 조회 (SELECT)
		- PUT : 데이터 수정 (UPDATE)
		- DELETE : 데이터 삭제 (DELETE)
	
	- 구성
		- 자원(Resource) - URI
		- 행위 (Verb) - HTTP Method
		- 표현 (Representations)
		
	- 규칙
		- 소문자 사용(대소문자 구분)
		- Hypen (-) 사용 
		- 공백 제거
		- CRUD 포함 x
			ex) id 번호가 7번인 책을 삭제하겠다
				기본 형태 - GET : /book/delete/1 -> DELETE : /book/1
				
		- / : 계층 관계 
			ex) http://study.spring.com/part/(x) : 마지막에는 / 붙이지 않는다
			
		
		- HTTP Status Code : https://developer.mozilla.org/ko/docs/Web/HTTP/Status
			- 200 : OK, ...		

		- HATEOAS Hypermedia As The Of Engine Application State
			- REST API에 대한 결과 정보
		
		- REST API 를 왜 사용 할까?????
			- 가독성, 보안(경로에서 막아줄 수 있다), 자원관리 편함 
			
3. 자원 공유
	- 동일 출처 정책 SOP Same-Origin Policy
		- 불러온 문서나 스크립트가 다른 출처에서 가져온 리소스와 상호작용하는 것을 제한하는 중요한 보안 방식
			- Origin 구성
				- URL Schema 
				- Hostname 
				- Port 
	- 동일 출처 구분
		http://oring.spring.com/dev/back.html	
		http://oring.spring.com/server/.html	
	
	- 교차 출처 자원 공유 CORS, Cross Origin Resource Sharing
		- 실행 중인 웹 애플리케이션이 다른 출처의 선택한 자원에 접근할 수 있는 권한을 부여하도록 브라우저에 알려주는 체제
		- 동일 출처 정책에 대한 불편함을 해결하기 위해 등장한 정책
		- 웹 브라우저에서 외부 도메인 서버와 통신하기 위한 방식을 표준화한 스펙
		- 다른 출처의 리소스를 불러오려면 그 출처에서 올바른 CORS 헤더를 포함한 응답을 반환
		
		
		
				
